# ********RoostGPT********
"""
Test generated by RoostGPT for test python-unit-studypartner using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=footer_card_062d99a4b9
ROOST_METHOD_SIG_HASH=footer_card_3e136a9ae6

```
Scenario 1: Validate the box value in the footer_card function
Details:
  TestName: test_footer_card_box_value
  Description: This test is intended to verify if the 'box' value of the footer card returned by the function is 'footer'.
Execution:
  Arrange: No arrangement necessary as no parameters are passed to the function.
  Act: Invoke the footer_card function and store the returned footer_card object.
  Assert: Check if the 'box' attribute of the returned footer_card object is equal to 'footer'.
Validation:
  Rationalize: The 'box' attribute is crucial for the correct positioning of the footer card on the UI. This test ensures that the footer card always appears at the correct location.

Scenario 2: Validate the caption value in the footer_card function
Details:
  TestName: test_footer_card_caption_value
  Description: This test is intended to verify if the 'caption' value of the footer card returned by the function is 'Made with ðŸ’› and H2O Wave.'.
Execution:
  Arrange: No arrangement necessary as no parameters are passed to the function.
  Act: Invoke the footer_card function and store the returned footer_card object.
  Assert: Check if the 'caption' attribute of the returned footer_card object is equal to 'Made with ðŸ’› and H2O Wave.'.
Validation:
  Rationalize: The 'caption' attribute provides information about the application. This test ensures that the correct caption is always displayed on the footer card.

Scenario 3: Validate the type of the object returned by the footer_card function
Details:
  TestName: test_footer_card_return_type
  Description: This test is intended to verify if the object returned by the footer_card function is of type 'ui.footer_card'.
Execution:
  Arrange: No arrangement necessary as no parameters are passed to the function.
  Act: Invoke the footer_card function and store the returned footer_card object.
  Assert: Check if the type of the returned footer_card object is 'ui.footer_card'.
Validation:
  Rationalize: Ensuring the correct type of the returned object is important for the proper functioning of the application. This test verifies that the function is returning an object of the correct type.
```
"""

# ********RoostGPT********
import pytest
from h2o_wave import ui
from cards import footer_card

class Test_CardsFooterCard:
    @pytest.mark.regression
    def test_footer_card_box_value(self):
        # Act
        card = footer_card()
        # Assert
        assert card.box == 'footer', "The box value of the footer card should be 'footer'"

    @pytest.mark.regression
    def test_footer_card_caption_value(self):
        # Act
        card = footer_card()
        # Assert
        assert card.caption == 'Made with ðŸ’› and H2O Wave.', "The caption of the footer card should be 'Made with ðŸ’› and H2O Wave.'"

    @pytest.mark.regression
    def test_footer_card_return_type(self):
        # Act
        card = footer_card()
        # Assert
        assert isinstance(card, ui.footer_card), "The type of the returned object should be 'ui.footer_card'"
