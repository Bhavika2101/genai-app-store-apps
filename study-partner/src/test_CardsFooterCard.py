# ********RoostGPT********
"""
Test generated by RoostGPT for test python-unit-studypartner using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=footer_card_062d99a4b9
ROOST_METHOD_SIG_HASH=footer_card_3e136a9ae6

```python
Scenario 1: Testing if the function footer_card returns a footer card with the correct caption
Details:
  TestName: test_footer_card_caption
  Description: The test is intended to verify whether the function footer_card returns a footer card with the correct caption "Made with ðŸ’› and H2O Wave."
Execution:
  Arrange: No setup is required as the function does not take any parameters.
  Act: Invoke the function footer_card.
  Assert: Check whether the return value's caption attribute matches the string "Made with ðŸ’› and H2O Wave."
Validation:
  This test is important to ensure that the footer card is being created with the correct caption. This is a key part of the function's specification and business requirement.

Scenario 2: Testing if the function footer_card returns a footer card with the correct box value
Details:
  TestName: test_footer_card_box
  Description: The test is intended to verify whether the function footer_card returns a footer card with the correct box value "footer."
Execution:
  Arrange: No setup is required as the function does not take any parameters.
  Act: Invoke the function footer_card.
  Assert: Check whether the return value's box attribute matches the string "footer."
Validation:
  This test is important to ensure that the footer card is being created with the correct box value. This is a key part of the function's specification and business requirement.

Scenario 3: Testing if the function footer_card returns a footer card of type ui.footer_card
Details:
  TestName: test_footer_card_type
  Description: The test is intended to verify whether the function footer_card returns a footer card of the correct type, which is ui.footer_card.
Execution:
  Arrange: No setup is required as the function does not take any parameters.
  Act: Invoke the function footer_card.
  Assert: Check whether the return value is an instance of ui.footer_card.
Validation:
  This test is important to ensure that the footer card is being created as an instance of the correct class, as required by the function's specification and business requirement.
```
"""

# ********RoostGPT********
import pytest
from src.cards import footer_card
from h2o_wave import ui

class Test_CardsFooterCard:
    @pytest.mark.regression
    def test_footer_card_caption(self):
        # Act
        result = footer_card()

        # Assert
        assert result.caption == "Made with ðŸ’› and H2O Wave.", "Footer card caption does not match expected value."

    @pytest.mark.regression
    def test_footer_card_box(self):
        # Act
        result = footer_card()

        # Assert
        assert result.box == "footer", "Footer card box does not match expected value."

    @pytest.mark.regression
    def test_footer_card_type(self):
        # Act
        result = footer_card()

        # Assert
        assert isinstance(result, ui.footer_card), "Footer card is not an instance of ui.footer_card."
