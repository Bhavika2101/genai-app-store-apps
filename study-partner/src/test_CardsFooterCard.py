# ********RoostGPT********
"""
Test generated by RoostGPT for test python-unit-studypartner using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=footer_card_062d99a4b9
ROOST_METHOD_SIG_HASH=footer_card_3e136a9ae6

Scenario 1: Validating the Box Property in the Footer Card
Details:
  TestName: test_validate_box_property
  Description: This test is intended to verify that the box property of the footer card is correctly set to "footer".
Execution:
  Arrange: Initialize a footer card using the footer_card() function.
  Act: Extract the box property of the returned footer card.
  Assert: Check that the box property is equal to "footer".
Validation:
  Rationalize: The box property is crucial for correctly positioning the card on the page. Ensuring it is set correctly is essential to the function's specifications.

Scenario 2: Validating the Caption Property in the Footer Card
Details:
  TestName: test_validate_caption_property
  Description: This test is intended to verify that the caption of the footer card is correctly set to "Made with ðŸ’› and H2O Wave."
Execution:
  Arrange: Initialize a footer card using the footer_card() function.
  Act: Extract the caption property of the returned footer card.
  Assert: Check that the caption property matches the string "Made with ðŸ’› and H2O Wave."
Validation:
  Rationalize: The caption property is responsible for providing a user-friendly description of the card's content. Ensuring it is set correctly is vital for the function's business requirements.

Scenario 3: Validating the Type of the Returned Card
Details:
  TestName: test_validate_card_type
  Description: This test is intended to verify that the returned card is of the type "ui.footer_card".
Execution:
  Arrange: Initialize a footer card using the footer_card() function.
  Act: Check the type of the returned card.
  Assert: Ensure that the card is of the type "ui.footer_card".
Validation:
  Rationalize: The function is expected to return a footer card. Hence, checking the type of the returned card ensures that the function is working as expected.

Scenario 4: Validating the Absence of Extra Properties in the Footer Card
Details:
  TestName: test_validate_no_extra_properties
  Description: This test is intended to verify that the returned footer card does not contain any properties other than "box" and "caption".
Execution:
  Arrange: Initialize a footer card using the footer_card() function.
  Act: Check the properties of the returned card.
  Assert: Ensure that the card only contains the "box" and "caption" properties.
Validation:
  Rationalize: The function is expected to return a footer card only with "box" and "caption" properties, and no additional properties. This test ensures that the function's output adheres to the specifications.

"""

# ********RoostGPT********
import pytest
from h2o_wave import ui
from cards import footer_card

class Test_CardsFooterCard:

    @pytest.mark.regression
    def test_validate_box_property(self):
        # Arrange
        card = footer_card()

        # Act
        box = card.box

        # Assert
        assert box == 'footer', "Expected box property to be 'footer'"

    @pytest.mark.regression
    def test_validate_caption_property(self):
        # Arrange
        card = footer_card()

        # Act
        caption = card.caption

        # Assert
        assert caption == 'Made with ðŸ’› and H2O Wave.', "Expected caption to be 'Made with ðŸ’› and H2O Wave.'"

    @pytest.mark.regression
    def test_validate_card_type(self):
        # Arrange
        card = footer_card()

        # Act
        card_type = type(card)

        # Assert
        assert card_type == ui.footer_card, "Expected type to be 'ui.footer_card'"

    @pytest.mark.regression
    def test_validate_no_extra_properties(self):
        # Arrange
        card = footer_card()

        # Act
        properties = vars(card)

        # Assert
        assert len(properties) == 2, "Expected card to only have 2 properties"
        assert 'box' in properties, "Expected 'box' property in card"
        assert 'caption' in properties, "Expected 'caption' property in card"
