# ********RoostGPT********
"""
Test generated by RoostGPT for test python-unit-studypartner using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=landing_page_view_e9363abc9e
ROOST_METHOD_SIG_HASH=landing_page_view_a1c3e3e928

Scenario 1: Validating header card creation
Details:
  TestName: test_header_card_creation
  Description: This test will validate if the header card is being created correctly when the landing_page_view method is called.
Execution:
  Arrange: Instantiate a Q object.
  Act: Call the function landing_page_view with the instantiated Q object.
  Assert: Check if the 'header' key in the q.page dictionary is not None.
Validation:
  The header card is a crucial part of the landing page view and its correct initialization is important for the correct functioning of the application.

Scenario 2: Validating footer card creation
Details:
  TestName: test_footer_card_creation
  Description: This test will validate if the footer card is being created correctly when the landing_page_view method is called.
Execution:
  Arrange: Instantiate a Q object.
  Act: Call the function landing_page_view with the instantiated Q object.
  Assert: Check if the 'footer' key in the q.page dictionary is not None.
Validation:
  The footer card is a part of the landing page view and its correct initialization is important for the correct functioning of the application.

Scenario 3: Validating device-not-supported card creation
Details:
  TestName: test_device_not_supported_card_creation
  Description: This test will validate if the device-not-supported card is being created correctly when the landing_page_view method is called.
Execution:
  Arrange: Instantiate a Q object.
  Act: Call the function landing_page_view with the instantiated Q object.
  Assert: Check if the 'device-not-supported' key in the q.page dictionary is not None.
Validation:
  The device-not-supported card is a part of the landing page view and its correct initialization is important for the correct functioning of the application.

Scenario 4: Validating chatbot card creation
Details:
  TestName: test_chatbot_card_creation
  Description: This test will validate if the chatbot card is being created correctly when the landing_page_view method is called.
Execution:
  Arrange: Instantiate a Q object.
  Act: Call the function landing_page_view with the instantiated Q object.
  Assert: Check if the 'chatbot' key in the q.page dictionary is not None.
Validation:
  The chatbot card is a part of the landing page view and its correct initialization is important for the correct functioning of the application.
"""

# ********RoostGPT********
import os
import pytest
from h2o_wave import ui, Q
from layout import landing_page_view
from src.cards import header_card, footer_card, device_not_supported_card, chatbot_card
from src.utils import heap_analytics

class Test_LandingPageView:

    @pytest.mark.smoke
    @pytest.mark.regression
    def test_header_card_creation(self):
        # Arrange
        q = Q(app='test_app')
        # Act
        landing_page_view(q)
        # Assert
        assert q.page['header'] is not None, "Header card not initialized correctly"

    @pytest.mark.smoke
    @pytest.mark.regression
    def test_footer_card_creation(self):
        # Arrange
        q = Q(app='test_app')
        # Act
        landing_page_view(q)
        # Assert
        assert q.page['footer'] is not None, "Footer card not initialized correctly"

    @pytest.mark.smoke
    @pytest.mark.regression
    def test_device_not_supported_card_creation(self):
        # Arrange
        q = Q(app='test_app')
        # Act
        landing_page_view(q)
        # Assert
        assert q.page['device-not-supported'] is not None, "Device-not-supported card not initialized correctly"

    @pytest.mark.smoke
    @pytest.mark.regression
    def test_chatbot_card_creation(self):
        # Arrange
        q = Q(app='test_app')
        # Act
        landing_page_view(q)
        # Assert
        assert q.page['chatbot'] is not None, "Chatbot card not initialized correctly"
