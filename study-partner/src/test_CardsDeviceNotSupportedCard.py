# ********RoostGPT********
"""
Test generated by RoostGPT for test python-unit-studypartner using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=device_not_supported_card_9fa9f4ae8a
ROOST_METHOD_SIG_HASH=device_not_supported_card_f06272b12e

Scenario 1: Verify the correct card type.
Details:
  TestName: test_device_not_supported_card_type
  Description: This test is intended to verify that the function device_not_supported_card() returns an object of type ui.form_card.
Execution:
  Arrange: No setup required.
  Act: Invoke the function device_not_supported_card() without any parameters.
  Assert: Check that the returned object is of type ui.form_card.
Validation:
  Rationalize the importance of the test and the expected result's connection to the function's specifications and business requirements. The function is expected to return a ui.form_card object as per the defined business logic.

Scenario 2: Verify the correct box value.
Details:
  TestName: test_device_not_supported_card_box_value
  Description: This test is intended to verify that the box value of the card returned by the function device_not_supported_card() is "device-not-supported".
Execution:
  Arrange: No setup required.
  Act: Invoke the function device_not_supported_card() without any parameters.
  Assert: Check that the box value of the returned card is "device-not-supported".
Validation:
  Rationale: The box value is used to identify the card in the UI. It is important to ensure that the function returns the correct box value as per the business requirements.

Scenario 3: Verify the correct items in the card.
Details:
  TestName: test_device_not_supported_card_items
  Description: This test is intended to verify that the items of the card returned by the function device_not_supported_card() contains a single ui.text_xl object with the correct text.
Execution:
  Arrange: No setup required.
  Act: Invoke the function device_not_supported_card() without any parameters.
  Assert: Check that the items of the returned card contain a single ui.text_xl object, and that the text of this object is "This app was built desktop; it is not available on mobile or tablets.".
Validation:
  Rationale: The items of the card define what is displayed in the UI. It is important to ensure that the function returns the correct items as per the business requirements.
"""

# ********RoostGPT********
import pytest
from h2o_wave import ui
from cards import device_not_supported_card

class Test_CardsDeviceNotSupportedCard:

    def test_device_not_supported_card_type(self):
        card = device_not_supported_card()
        assert isinstance(card, ui.form_card), "Returned object is not of type ui.form_card"

    def test_device_not_supported_card_box_value(self):
        card = device_not_supported_card()
        assert card.box == "device-not-supported", "The box value of the card is not 'device-not-supported'"

    def test_device_not_supported_card_items(self):
        card = device_not_supported_card()
        assert len(card.items) == 1, "The card does not contain exactly one item"
        assert isinstance(card.items[0], ui.text_xl), "The item in the card is not of type ui.text_xl"
        assert card.items[0].text == "This app was built desktop; it is not available on mobile or tablets.", "The text of the ui.text_xl object is not correct"
